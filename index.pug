doctype html
html(lang="en")
	head
		title Paper HN
		meta(charset='utf-8')
		meta(name="viewport" content="initial-scale=1")
		link(rel="preconnect" href="https://fonts.googleapis.com")
		link(rel="stylesheet" href="https://fonts.gstatic.com" crossorigin)
		link(href="https://fonts.googleapis.com/css2?family=DM+Serif+Text:ital@0;1&display=swap" rel="stylesheet")
		style.
			body {font-family: serif;}
			h1 {font-family: "DM Serif Text", serif; font-size: 300%; text-align: center; margin-bottom: 0.5em}
			.mastspan {font-family: "DM Serif Text", serif; border-top: 1px solid black; border-bottom: 1px solid black; padding: 0.25em 0.5em; display: flex; justify-content: space-between}
			progress {display: block; margin: 2em auto; width: 100%; max-width: 25em}
			a:link, a:visited {text-decoration: none; color: inherit}
			a:link:hover {text-decoration: underline}
			main {margin: -2em auto 0}
			.grid-item, .grid-sizer {width: 100%; max-width: 25em; margin: 2em}
			@media screen and (max-width: 58em) {.grid-item, .grid-sizer {margin: 2em 0}}
			main section {border-bottom: 1px solid black; padding-bottom: 2em; margin-bottom: 0 !important}
			main section:nth-child(-n+3) {max-width: 54em}
			main section:nth-child(-n+3) h2 {font-size: 220%}
			main section:nth-child(-n+3) img {filter: none}
			main section:nth-child(n+10) h2 {font-size: 120%}
			main section img {max-width: 100%; filter: grayscale(100%); display: block; margin: 0 auto 0.5em}
			main section:hover img {filter: none}
			h2 {font-family: "DM Serif Text", serif; margin: 0 0 0.5em}
			main section p {margin-top: 0.25em;}
			p {margin: 0; -webkit-hyphens: auto; -moz-hyphens: auto; -ms-hyphens: auto; -o-hyphens: auto; word-break:break-word; hyphens: auto; text-align: justify}
			.keyword {font-family: sans-serif}
			.keyword a:link, .imprint a:link {text-decoration: underline}
			.job {margin-top: 1em; padding-bottom: 1em}
			.job p {font-size: 90%}
			.imprint {margin-top: 2em}
			.imprint p {border: 1px solid black; padding: 0.75em}
		meta(property='og:url' content='https://www.wolfgangfaust.com/project/paper-hn/')
		meta(property='og:title' content='Paper HN')
		meta(property='og:description' content="Hacker News front page in the style of a print newspaper")
		meta(property='og:image' content='https://www.wolfgangfaust.com/project/paper-hn/screenshot.png')
		meta(name='twitter:card' content='summary_large_image')
		meta(name='twitter:title' content='Paper HN')
		meta(name='twitter:description' content="Hacker News front page in the style of a print newspaper")
		meta(name='twitter:image' content='https://www.wolfgangfaust.com/project/paper-hn/screenshot.png')
	body
		header
			h1: a(href='https://news.ycombinator.com') Latest posts from YC Hacker News
			.mastspan
				span No. #{Math.max(...stories.map(s => s.id))}
				span: a(href="game.html") Play a game
				span: a(href="top.html") Top Stories
				span: a(href="index.html") New stories
				span #{date}
		.noscript This looks much nicer if you enable JavaScript.
		main
			- let imgcnt = 0
			for story, idx in stories
				section.grid-item
					- if (story.image) imgcnt++
					if story.image
						img(src=story.image)
					h2: a(href=story.url)=story.title
					p
						code=story.domain
						!=' &mdash; '
						=story.paragraph
						=' '
						strong.keyword
							a(href='https://news.ycombinator.com/item?id='+story.id)=story.keyword
							| ,&nbsp;#{idx+1}
			for job in jobs
				section.grid-item.job
					p
						a(href=job.url) #[strong=job.title1] #{job.title2}
						=' '
						code=job.domain
			footer.grid-item.imprint
				p.
					A project of #[a(href='https://www.wolfgangfaust.com') Wolfgang Faust].&ensp;
					Open source on GitHub as #[a(href='https://github.com/wolfgang42/paper-hn') wolfgang42/paper-hn].&ensp;
					Data from #[a(href='https://news.ycombinator.com') Hacker News].&ensp;
					Inspired by #[a(href='https://unim.press') The Unim.press].
			.grid-sizer
		script.
			var main = document.querySelector('main')
			document.querySelector('.noscript').remove()
			main.style.display = 'none'
			var progress = document.createElement('progress')
			progress.innerText = 'Loading...'
			document.body.append(progress)
		script(src="https://unpkg.com/imagesloaded@4/imagesloaded.pkgd.min.js")
		script(src="https://unpkg.com/masonry-layout@4/dist/masonry.pkgd.min.js")
		script.
			if (!window.imagesLoaded || !window.Masonry) {
				// Libraries failed to load somehow
				main.style.display = 'block'
				progress.remove()
			}
			imagesLoaded(main, function() {
				main.style.display = 'block'
				var msnry = new Masonry(main, {
					itemSelector: '.grid-item',
					columnWidth: '.grid-sizer',
					fitWidth: true,
					gutter: 0,
					transitionDuration: 0,
				})
				// Retrigger masonry after window resize
				// I don't quite understand why this is necessary---masonry should be doing this already,
				// and also it doesn't seem to work unless I introduce a considerable delay---but
				// since this works I'm not going to spend any more time messing with it.
				var rsevent = null
				window.addEventListener('resize', function(event){
					if (!rsevent) {
						rsevent = window.setTimeout(function() {
							msnry.layout()
							console.log('resize')
							rsevent = null
						}, 200)
					}
				})
				progress.remove()
			})

